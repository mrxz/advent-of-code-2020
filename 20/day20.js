let input = [
"Tile 2729:",
"###.######",
".......#.#",
"#..#......",
"....#.#...",
"...#.....#",
".....#.###",
"...#.....#",
"........#.",
"..........",
"#.......##",
"",
"Tile 1783:",
"..#.#.#.##",
"#..#......",
"...##....#",
"..........",
"#.#...###.",
".#........",
".....#....",
".#.#.#....",
"##...##...",
"..###..#.#",
"",
"Tile 3889:",
".#..#..###",
"###....###",
"#..#..#..#",
"#...#....#",
"#...#.#..#",
".......#.#",
"......#..#",
"#.#...#..#",
"#.#......#",
"#.#.#.....",
"",
"Tile 3851:",
"#.##......",
"...#.#.###",
"#.......#.",
"#..#.....#",
"..........",
"...##.....",
"#...#....#",
"...#....##",
".#....#.#.",
"#..##.####",
"",
"Tile 1747:",
"#.#.##.##.",
"#......#.#",
".........#",
"..........",
"..........",
"#..#..#..#",
".##.#..#..",
"#...#.#...",
".#.#......",
"#..###.#.#",
"",
"Tile 1627:",
".#.###..#.",
"...#.....#",
"..#......#",
"#.......##",
"#.#....#.#",
"#.#......#",
"#.#.......",
"#...##..#.",
"...#.#...#",
"...#.#..##",
"",
"Tile 1433:",
"##..####.#",
"...#...#.#",
"#........#",
".##..#...#",
"......#.#.",
"#..##..###",
"#....#.##.",
".#.....#..",
"#........#",
"#....#.##.",
"",
"Tile 1213:",
".#.##..#.#",
"#........#",
".#......#.",
"..#.......",
"...#...#..",
".....#....",
".....#....",
"......#...",
".#.#......",
"#.##....##",
"",
"Tile 1741:",
"#..#...###",
"........#.",
"#...###..#",
"##........",
".##.......",
"##...#...#",
"..........",
"#..#..#.##",
"###.#..##.",
"####.###.#",
"",
"Tile 2083:",
"#.####.###",
"...#......",
"#...#.....",
"##........",
"#...#.....",
".#..#..##.",
"#..#.##..#",
".#..###..#",
"#.#......#",
".##...###.",
"",
"Tile 2063:",
"#...#.#..#",
"#...#....#",
"#.#......#",
"##......#.",
".#.......#",
"#.........",
"#..#...#.#",
"........#.",
".#.#......",
"..#.#.#..#",
"",
"Tile 1109:",
".##.#.####",
"......#...",
"#........#",
"#....#..#.",
"##...#...#",
"#..#.....#",
".......#..",
".#..#...#.",
"#........#",
"#..#.##.#.",
"",
"Tile 1049:",
"####..#...",
"##.....#.#",
"#.##...#.#",
"...#......",
".#......#.",
"#........#",
"#...##.#..",
"##.......#",
".##.....#.",
"#####..##.",
"",
"Tile 1979:",
"#.###.###.",
"...#.#...#",
"..#......#",
"#.#.#...#.",
"##........",
"........#.",
"#...##....",
"#.......##",
".#....#...",
"#..#.###.#",
"",
"Tile 1193:",
"#.#...#..#",
"##.##...#.",
"...#.#....",
"#.##.#....",
"......#.#.",
"#.........",
"#.#......#",
"..#.......",
"#.........",
"...##..###",
"",
"Tile 3659:",
"...#...##.",
"###.#.....",
"#..#.....#",
"..##.##...",
"#.#....##.",
"#.#......#",
"#.......##",
".#.....#.#",
".####....#",
".#######.#",
"",
"Tile 1811:",
".#..####..",
"#...#.....",
".........#",
"...#....#.",
".......#..",
".........#",
"#........#",
"........##",
"#.#..#....",
"###.######",
"",
"Tile 3541:",
"####.##..#",
"##..###..#",
"##.#.#....",
"..........",
"...#....##",
"##....#..#",
"###.....#.",
"#.......##",
"..#.......",
"##..###.##",
"",
"Tile 2113:",
"##..#..#.#",
"##..##.#.#",
"#.......##",
".#...##...",
"..#.#.....",
"#.......##",
"...#..#.##",
"#.....#...",
"#..##.....",
"##.##...#.",
"",
"Tile 2081:",
".##.###..#",
"#.#..#...#",
"#......##.",
"....#....#",
"...#.....#",
"#.....####",
"#........#",
".##......#",
"#...#.....",
".####.#...",
"",
"Tile 1021:",
"##.###.#.#",
".#.#..#...",
"##.#.#####",
"#...#....#",
".....#.#..",
"#.........",
"....#.....",
"...#...#.#",
"..##.#....",
".#.#.###.#",
"",
"Tile 1487:",
"..#.#.####",
".##..##...",
"..#.###..#",
".##....#..",
".#.#..#.##",
"..#..#..##",
"##....##.#",
"........##",
"...#.##...",
"#..#.#....",
"",
"Tile 3767:",
".#..##.###",
"#.#..#...#",
"#....#..##",
"#...#.....",
".#.#..#...",
"##..#....#",
"#.#.##.#.#",
"#....#..#.",
"#....##..#",
"##..###..#",
"",
"Tile 3109:",
"#..#.#####",
".#..##...#",
"..#.#....#",
"#..#.##..#",
".......#..",
"#......#.#",
"..##.#...#",
".#..#.....",
"#.........",
"##......#.",
"",
"Tile 1009:",
"#..##.###.",
"..........",
"##.......#",
"#.#..##..#",
".....#...#",
".........#",
"...#.....#",
"####.#....",
"##...#...#",
"....#..##.",
"",
"Tile 2693:",
"#.#..#..#.",
"..#.#..#..",
"...##.#...",
"#.....#.##",
".#.......#",
".#..###...",
"....##...#",
"#..#.#..#.",
"......#..#",
".##...#.#.",
"",
"Tile 3533:",
".#.#.#####",
"##...#....",
"#.....#...",
".........#",
"#........#",
"#......#..",
"...#.....#",
"#..#.#....",
"..##.....#",
".#.#.#.##.",
"",
"Tile 1171:",
"....#....#",
"...##...##",
"#..#..##.#",
"#........#",
"........#.",
"#..#....##",
"...#.....#",
".........#",
"#....#...#",
"##.#####..",
"",
"Tile 1279:",
"..#.##.###",
"#.....#..#",
"..##..#..#",
"......#...",
"#..#...#..",
"...##..##.",
".#.....#.#",
"#.....###.",
".....#....",
"..#..##.#.",
"",
"Tile 1583:",
"###..###..",
"#......#..",
".#..#..##.",
"...#......",
"...#....##",
"#...#.#...",
"...#.....#",
"...#.....#",
"#..##.#...",
"#.#.#...##",
"",
"Tile 1129:",
"####..#...",
".......###",
"#..##..#..",
"##.##...#.",
"......##..",
"....#..#..",
"##.....#..",
".....#...#",
"##......##",
"..###...#.",
"",
"Tile 2591:",
"#..##.#.#.",
"#......#.#",
"#........#",
"#.#.......",
"#..#.#....",
"....#..###",
"...#......",
"..#.....#.",
"#...##.#..",
"#.##..###.",
"",
"Tile 1597:",
"##.#.####.",
".#..#.#..#",
"#.........",
"##....#..#",
"#........#",
"..........",
"#...#.....",
".#.......#",
".......#.#",
"#...####..",
"",
"Tile 1423:",
"#....#####",
"..#......#",
"..##.#..##",
".#..##.#.#",
"#.........",
".#......#.",
"#.....#...",
"##.#.#...#",
"#....#....",
".#...#.###",
"",
"Tile 1669:",
"#.##.#...#",
"..#.##.#..",
"#.......#.",
".....#....",
".#..#.#...",
".....#....",
".......#..",
"..........",
"##.##.....",
"#.#.#.##..",
"",
"Tile 1283:",
"##..###.#.",
".....#...#",
"#..#.....#",
"#...#....#",
"#.##.....#",
"#...#.#..#",
"#........#",
".#...##.##",
"#...#.#..#",
"#..#.#.###",
"",
"Tile 2371:",
".##.###.##",
"#......##.",
".#.......#",
"#....#....",
"#........#",
"#....#....",
"........##",
"..#.....#.",
".......#..",
"#..###...#",
"",
"Tile 3823:",
"..#.######",
"..#......#",
".....#...#",
"....#...##",
"#.####...#",
"......#...",
"##....#..#",
".#.......#",
"#.#..#.#..",
"####.##.#.",
"",
"Tile 2141:",
"..#...####",
"...#...#.#",
"#.........",
"..###.#.#.",
"...##.#..#",
"#.#..##...",
"..#.......",
"...#......",
"#..#.#.##.",
"##.#.#.#.#",
"",
"Tile 1861:",
"#....##...",
".#..#.....",
"##.#......",
".##..#.###",
"#.#.#.....",
"#...##..##",
".#..##...#",
"....##.#.#",
"#......##.",
"#.###.#.##",
"",
"Tile 1063:",
"..##.#..#.",
"....##....",
"#...##.#.#",
"#...#.#..#",
"##....##.#",
"#.....##..",
".#.#.###.#",
"..#...#...",
"#.........",
"#.#.####..",
"",
"Tile 1847:",
".#...##.##",
".#.......#",
"..........",
".........#",
".#........",
"....#..###",
"#.##....#.",
"..#...#...",
"#.....#...",
"#.#..#....",
"",
"Tile 1733:",
"#..#.#.#.#",
"..#.....#.",
"#........#",
"#.#..#...#",
".####....#",
".#........",
".##......#",
"#.......##",
"........##",
"#...##..##",
"",
"Tile 2441:",
"....######",
"#......###",
".#......#.",
"#..#....#.",
".#..#.#..#",
"....#.....",
".....##...",
"##.......#",
"....##....",
"#......###",
"",
"Tile 3631:",
"##.#.#.#.#",
"#.##.##.#.",
"#..#..#...",
"..##.#...#",
"#.#.###...",
"#..#...#..",
"#....#...#",
"...##.##.#",
"...#..#..#",
"##..#.##.#",
"",
"Tile 2543:",
"#..#####..",
".##....##.",
"##...##...",
"......#...",
".###.....#",
"...#......",
"..##.#..##",
".##.......",
"#..#......",
"#.####.#..",
"",
"Tile 1297:",
"..#.#..#..",
"........#.",
"#.#.......",
"#..#.#....",
".#..#####.",
"#.##....##",
"#......##.",
"#..#...##.",
"#.#..#.##.",
"###..#..##",
"",
"Tile 2099:",
"#..#..##.#",
"..#.......",
"#.#..#....",
"#..#..#...",
"#.#..#..##",
"...##...##",
"#.........",
".##.#..#.#",
"#...##.#.#",
"###...#..#",
"",
"Tile 2203:",
".#.#..##..",
"...#.#....",
"..#....#.#",
".#..#....#",
".#.##.##..",
"#.##...##.",
"........##",
"...#.#....",
".......###",
"...##.##.#",
"",
"Tile 3517:",
"#..#.#..#.",
"..........",
"...#.....#",
"..........",
"......####",
".#........",
".#........",
"......##.#",
"#..##...#.",
".##.###.#.",
"",
"Tile 2143:",
"....###.#.",
"#......#.#",
"#....#..#.",
"##....##.#",
"##....##..",
"#.........",
".#....##.#",
"#.#.##..##",
"..#.....##",
".###.##.#.",
"",
"Tile 2791:",
"###..#..##",
"###.......",
"....#.....",
"#.........",
"#.###.##..",
"....####..",
"...#.....#",
"....#....#",
".....##.##",
".##.###..#",
"",
"Tile 2131:",
"#.#.###.#.",
"...#.....#",
"#.#..##...",
"#.#...#...",
"........#.",
"..........",
"##.......#",
"..###...#.",
"..##.....#",
"...#...##.",
"",
"Tile 3797:",
"####...##.",
".##.......",
".......#..",
"......##.#",
"...#..#..#",
"#.........",
"##....##.#",
".....#.#.#",
"#.........",
"####..###.",
"",
"Tile 1327:",
".#...#..#.",
"#...#.....",
".......#.#",
"#.###..#..",
".....#....",
".#...#....",
".........#",
"#......#.#",
".....#....",
"####..##..",
"",
"Tile 3323:",
"#.##.#...#",
"...####.##",
"#...#.#..#",
"#..#.#...#",
"......##..",
"#..#....#.",
"#....#...#",
"....#..#..",
"#..##....#",
".######.#.",
"",
"Tile 2437:",
"#.####...#",
"........#.",
"...#....##",
"##...##...",
"..#####..#",
".....#....",
"...#.#..##",
"....#...##",
"...#......",
".##.......",
"",
"Tile 1993:",
".#.#######",
"###....#..",
"...#......",
".#..#.#...",
"#..#.....#",
"...##..##.",
"###...#...",
".....#.#.#",
".......##.",
".#....#...",
"",
"Tile 2719:",
"##.##..#.#",
"...#......",
"..#.#.....",
".#.......#",
"#.....#...",
"#...#.##..",
"#.........",
"##........",
"#.#......#",
"#..##.##..",
"",
"Tile 2531:",
"..#.....##",
"##.#......",
"...#...#.#",
"#.#.......",
"#...#.#..#",
"...#.....#",
"#.#......#",
"#.##.#....",
".#.#.....#",
"#..#####..",
"",
"Tile 3037:",
"#.#..#....",
"#....#...#",
"#.##...###",
"#.#..#.#.#",
"#....#....",
".###......",
".........#",
"#.##......",
"......#...",
"#..##.##.#",
"",
"Tile 3469:",
"#.....##..",
".##....#.#",
"....#...##",
".....#.##.",
"..#...##..",
"#.#...##.#",
"#....#....",
"###.##.#.#",
"#......##.",
"####...##.",
"",
"Tile 2003:",
"##.#...###",
"....#.##.#",
"#..#.#..##",
".....#..#.",
"..#.....##",
"#.........",
"#..##..#..",
"#.##..#.##",
".........#",
"##.#..#...",
"",
"Tile 3391:",
"#...##.#..",
".#....#...",
"...##..#..",
"#.#.......",
"......#...",
".......#.#",
"......#..#",
"....###..#",
"#.....#...",
".##.#.#...",
"",
"Tile 1277:",
"...###...#",
"##.##...#.",
".......#..",
".........#",
"#......#..",
"##........",
"#..##.....",
"#........#",
".#..#...#.",
"#..#..##..",
"",
"Tile 3793:",
"####.#.##.",
"....#...#.",
"##........",
"..........",
"##..#.....",
"#..#......",
"#....#....",
"#...#....#",
"..........",
"########..",
"",
"Tile 3739:",
".#..##.##.",
".#......#.",
".#...##..#",
"....#.###.",
".........#",
".#..#..#..",
"#..#.##...",
"#...#.....",
"....#.....",
"##.######.",
"",
"Tile 3373:",
"#.##.#..##",
"#.##...##.",
"#......##.",
".#.....#.#",
"..##.#.#.#",
"##.#.....#",
"#.#...#..#",
"..........",
"#........#",
"#.#..##.#.",
"",
"Tile 3697:",
"..#.....##",
"#......#.#",
"..#.#...##",
"###..#.##.",
"##...#..#.",
".....####.",
"#..#.##..#",
"....#.#...",
".....#...#",
"....#...#.",
"",
"Tile 1489:",
"..###.##..",
"#...#.....",
"....#...#.",
"...#.#..##",
"#.........",
"......##..",
".#....#...",
"#....##.#.",
"#...##.#.#",
"#..#.#...#",
"",
"Tile 3877:",
"#......###",
"#......#..",
"...#.#....",
"###...#..#",
".#........",
"#.....##..",
"#.......#.",
"#.#..##...",
"#.........",
"#######..#",
"",
"Tile 1373:",
".#.....#..",
".....#....",
"#.........",
"....#....#",
"..#.###..#",
"...#..#...",
"##...##...",
"...#.....#",
"#..###.##.",
".##.#####.",
"",
"Tile 2609:",
"..#...####",
"#.##....#.",
"..#.......",
"#......#..",
".......#..",
"...#....##",
"#.....#..#",
"#...#....#",
"....##...#",
".#.##.##..",
"",
"Tile 1709:",
".##..#.#.#",
"...#......",
"#.#.#.....",
"....#...#.",
"#.....#...",
".....#.#.#",
"#...#.....",
".#...##..#",
"#........#",
"##.#....#.",
"",
"Tile 1447:",
".#.##.#..#",
".....#...#",
"#..#....##",
"#........#",
"...#......",
"###......#",
"...#......",
"#.......##",
"#.........",
"#.#.#####.",
"",
"Tile 2671:",
"#.##.#####",
"#..#..##..",
"#.##.....#",
".....#....",
"##...##..#",
"#.###....#",
"#.#....#.#",
".#.......#",
"#.#....###",
"....#.#..#",
"",
"Tile 2887:",
".###.#...#",
"#...#..#.#",
".....#...#",
"#.#...##..",
"..#....###",
".#..#..#.#",
".#..#.##..",
"#.#..##...",
"#.##......",
"#.##..#...",
"",
"Tile 2111:",
"..#..#..##",
"..........",
"......#..#",
".......#.#",
"..###.####",
"#...##...#",
"..#.#....#",
".......##.",
"..#....#.#",
"..##.####.",
"",
"Tile 3041:",
"##....#..#",
"#..#.##..#",
"...#..###.",
"#.....#.#.",
"....##...#",
"..#....#..",
"#....#..#.",
"....#.....",
"...#......",
".#.##....#",
"",
"Tile 2927:",
".##...##..",
".........#",
".#.....#..",
"#..#.....#",
"..#.#....#",
"##..#.#..#",
"#.##...#..",
"#.#.......",
"#.#.....#.",
"#.#...##..",
"",
"Tile 2557:",
"###...#.##",
"#......#..",
"##.#.#...#",
"...#.###.#",
"#.#..#....",
".##.###..#",
"#......#..",
"#....#.#..",
"###.#....#",
".#..#.#...",
"",
"Tile 1663:",
"##...#.###",
"#.#.....##",
"##.....#..",
"..#......#",
"#.........",
"....#....#",
"...#..#..#",
"#...#.....",
".#......##",
"##.#......",
"",
"Tile 1949:",
"##...###..",
"..........",
"....#...##",
"..........",
".#.....##.",
"#.........",
".#....##..",
"..#.##.###",
"..#.#....#",
".#..####.#",
"",
"Tile 2953:",
".....#...#",
"##...#....",
"..#.#..##.",
"#.......#.",
".....#.#..",
"#.#.#....#",
"#..###...#",
"#......#.#",
"...#......",
".#..#..#.#",
"",
"Tile 2897:",
"..###..###",
"#.........",
"#...##....",
"......#..#",
"......##.#",
"..#..##..#",
"#..#.#....",
"##........",
"#.#......#",
".##....#..",
"",
"Tile 1451:",
".#........",
"#.#.......",
"##....#.##",
"#.#.......",
"....##..#.",
"##.....###",
"....#...##",
"#..#.#.##.",
"#...##....",
"##.#.#..#.",
"",
"Tile 2351:",
"....#.##..",
"##........",
".........#",
"#.....#..#",
"##........",
".##...#..#",
"#...#...##",
"....#.....",
"#.#.......",
"...#...###",
"",
"Tile 1399:",
"#######.#.",
"###....#.#",
"##.#..#...",
"#.........",
"#.#.#.....",
"..######..",
"##...#.#..",
"##...#.#..",
".#....#...",
"#.###.....",
"",
"Tile 3079:",
"..#.##.###",
"....#....#",
"#........#",
"##.......#",
"......#..#",
"..#....#.#",
".......##.",
"#......#..",
"...#......",
".##..#.#.#",
"",
"Tile 2027:",
".....#.##.",
"...#.#....",
".......#.#",
"#.#....###",
"#........#",
"#....#..##",
".##..#..##",
"#####.##.#",
"...##....#",
"#.........",
"",
"Tile 2239:",
"...#....##",
"......#..#",
"..#......#",
".......#.#",
"#.##.#####",
"...##...#.",
"..#.....##",
"...##.....",
"##........",
".#...#.###",
"",
"Tile 3019:",
".#.#...#..",
"..#.#.....",
".....#..##",
"####.#...#",
".#.##....#",
"#...#.##.#",
"##.#.#....",
"#...#.....",
"#..#.#..##",
"####.#..#.",
"",
"Tile 2579:",
".#....##..",
".#.##..#.#",
"#.....#..#",
"..#......#",
"#.........",
"#...#.....",
"#..#......",
"#...#.....",
"...#..#.#.",
"..#....##.",
"",
"Tile 2699:",
"..#.#.....",
"#..##....#",
"#..#.#...#",
"###...####",
"#.....#..#",
"#....##.#.",
"#...##....",
"........#.",
".##..##...",
"##....#..#",
"",
"Tile 1667:",
"..#..###.#",
"#.#......#",
"..##.##..#",
"..#....#.#",
".#...#.###",
"...#..###.",
"...#..#.##",
"##.#.##..#",
"..####.#.#",
".#..#.....",
"",
"Tile 3061:",
"#.##.#.#.#",
".##.##...#",
"..........",
".......#..",
".....###..",
"..##..#..#",
"#..###...#",
"#..##.....",
"#..#....#.",
"......###.",
"",
"Tile 1531:",
"..###.#...",
"#.....#..#",
"##.#..#.#.",
"#.#.##...#",
"..#......#",
"..#.#....#",
"##.##.#...",
"..##.....#",
"##...#..##",
"..####.###",
"",
"Tile 3929:",
"#..#..##..",
"##....#...",
".#........",
".....##...",
"...#.....#",
"..#..##..#",
".........#",
".....##..#",
".#....#...",
"...##...##",
"",
"Tile 2711:",
".#.####..#",
"#......#.#",
"#.#.......",
"......###.",
"#.........",
"#.........",
"#......#.#",
".......#.#",
"#.....#..#",
".#.#.###..",
"",
"Tile 3907:",
"#.#.#...#.",
"....##..#.",
".....##.#.",
"##......##",
"....#.#..#",
"#..#.....#",
"#...#..#..",
"..##....##",
".#........",
".#.#..####",
"",
"Tile 3299:",
"##...##.##",
".#........",
"#...#....#",
".#...#....",
".#.#......",
"#.#...#..#",
".#..#....#",
".#..#..#.#",
".#..#....#",
"###.#..#.#",
"",
"Tile 2677:",
"#.#.##.##.",
"#.#..#.#.#",
"....#....#",
"#.........",
"##.......#",
"##.......#",
".....#.##.",
"#....#.#..",
".........#",
"#...###..#",
"",
"Tile 2207:",
".##.#..###",
"#.#.##....",
"..........",
"#.#.#...##",
"........##",
"#.#..#....",
"...##..#.#",
".....#.#.#",
".........#",
".#..##....",
"",
"Tile 2393:",
"#.#..###.#",
"##.##.....",
"#.........",
"........##",
"#.#......#",
"#..#...#.#",
".........#",
"##..#....#",
"......#..#",
"#...#.##..",
"",
"Tile 1453:",
"#..#.##...",
"##....#..#",
"#.....#.##",
"#.##....##",
"..##.#..##",
"...#...#.#",
"....##....",
"#......##.",
"#......##.",
"###..####.",
"",
"Tile 1871:",
"######.#..",
"#.......##",
"......#..#",
"##.......#",
"##......#.",
"..###..#..",
"...#..##.#",
".#.##...#.",
"........#.",
"..####...#",
"",
"Tile 2777:",
"#.#..#.#.#",
"......##.#",
"#.....#.#.",
"#.#.....##",
"#....###.#",
"...##...##",
"#.......#.",
".......#.#",
".#....#..#",
"..#####...",
"",
"Tile 1223:",
"...##.#.#.",
"#...#....#",
"##........",
"#.....#..#",
".....###.#",
"....#...##",
".....#...#",
".........#",
"#.........",
"#..###.###",
"",
"Tile 2633:",
"..##.##...",
"###.##.###",
"..#.#....#",
"....##....",
"#..#.#....",
".#...#...#",
"#.##.....#",
"#.#...##.#",
"##...#.#.#",
"..######.#",
"",
"Tile 3307:",
"##...###.#",
"##.......#",
"#.#...#...",
"...#.....#",
"#.....#.##",
"#.#.......",
"##.#....##",
"##......##",
".##.#.#..#",
"#...##..##",
"",
"Tile 1123:",
".#..#.....",
"#.#...#...",
".#..##.#.#",
"...###.#.#",
"###...#...",
".##....#..",
"#.#......#",
"..#..###.#",
"##.....#.#",
"###.#..##.",
"",
"Tile 2797:",
".#.######.",
"#.#.#....#",
"#.........",
"##....#..#",
"#...#....#",
"###..#....",
".##..#####",
"..#.##....",
"...#......",
"..###.##..",
"",
"Tile 1613:",
"########..",
"##.#.....#",
"....##..##",
"##.#....#.",
"#.##...###",
"#......#..",
"..........",
".......###",
"....#..###",
"#.#.##...#",
"",
"Tile 1511:",
"###...##.#",
"#....#....",
".........#",
"..#.....##",
"###.....#.",
"#.....#.#.",
"..###..#.#",
"#........#",
"#..#...#.#",
"#.#..#.##.",
"",
"Tile 1999:",
"#..#.#..#.",
".........#",
".......#..",
"..#.#.#..#",
"#....#..##",
".#........",
"##.#.....#",
"##.......#",
"#....#..##",
"###..#.###",
"",
"Tile 2819:",
"..#.##...#",
"#..##...##",
"..##......",
"##....#...",
"#...###..#",
"#.###....#",
".#.#.#.#.#",
"#..#.....#",
"..#.......",
"..##...#.#",
"",
"Tile 3847:",
"##.######.",
"..#.......",
".........#",
".........#",
"#..#......",
"####.....#",
"..#..#..##",
"#.....###.",
"##.....#.#",
"####....#.",
"",
"Tile 1723:",
"...###....",
"#.........",
"#.....#...",
".....#...#",
"#....#.#..",
"#..#.....#",
"...#......",
".#...#..##",
"#..#.#.#.#",
"##.###.###",
"",
"Tile 1039:",
"#...#.##..",
"......#..#",
"#.......##",
"##....##..",
"#...#....#",
"#....#...#",
"##.#.#.#..",
"#.#.......",
"#..#.....#",
".#...###..",
"",
"Tile 3433:",
".#.###.#..",
"#...#....#",
"#.....#..#",
"#.....#..#",
"#........#",
".......###",
"..###.###.",
".....#...#",
"#...#.....",
"....##..#.",
"",
"Tile 1069:",
".#....#...",
"###..#....",
"#.........",
"#....#.###",
"....#.#...",
"..#.....##",
"#.##.#....",
".#.##.#...",
"..........",
".#.#....#.",
"",
"Tile 3727:",
"#.#.#####.",
"...#..#..#",
"##......##",
"#.##...#..",
"#...#.###.",
".....#.##.",
"##..#.##..",
"#...#.....",
"....#.....",
"..#######.",
"",
"Tile 1301:",
"#####..#..",
".....##...",
"#.##...#..",
".##......#",
"#.....#...",
"#....#....",
".....#.#.#",
"#.....#..#",
"#..#.....#",
"#.##.#..#.",
"",
"Tile 3583:",
"#.###.....",
"#......#.#",
"#..#.....#",
"......##.#",
"#.....##.#",
"##....####",
"###...##..",
"##.##....#",
"......##.#",
"..##...##.",
"",
"Tile 3191:",
".##.#.#...",
"....#.....",
"#.#.....##",
"##.#.#....",
"...#.....#",
"#........#",
"..........",
"....#.#..#",
"........##",
".###.####.",
"",
"Tile 1987:",
"##.....###",
"..#.......",
"##.##.#..#",
"..........",
"......#..#",
"#...#.#..#",
"...#......",
"###.#..#..",
"#.##....#.",
".##...##.#",
"",
"Tile 1493:",
"..##..####",
"#..#.#...#",
"...#......",
"...#....##",
"#.........",
"........##",
"...#.....#",
"#....##..#",
".#.......#",
".#.#..#..#",
"",
"Tile 1699:",
".##...#.#.",
".#.......#",
".........#",
"..#...#..#",
"##...#..##",
"#.#..#....",
"#..#..#..#",
"#....#...#",
"....#.....",
"#...##..#.",
"",
"Tile 2459:",
".###..##..",
"#........#",
"..#.##....",
"#....#....",
"#.#..#..##",
"...####..#",
".....##...",
"..#......#",
"...#...#.#",
"#..#..####",
"",
"Tile 2801:",
".......#..",
"..#.#....#",
"#.....#...",
"#..#.....#",
".##...#...",
"#.....#..#",
"......#.#.",
"......#...",
"#....#....",
".#.##.###.",
"",
"Tile 1759:",
"##.###..##",
"#.##..#...",
"#........#",
"........##",
".....#.#.#",
"..#......#",
"#.##...#.#",
"##......##",
"##.#......",
"...###.#..",
"",
"Tile 3821:",
"..#####.#.",
"#....#...#",
".....#...#",
"..........",
"..##.###.#",
"#....#....",
"###.#.####",
"#......#..",
"#.##.....#",
".....###..",
"",
"Tile 2423:",
"#.####.#..",
".#........",
".##......#",
"...#......",
"#..##.....",
"#..##...##",
"#.........",
"#.#.##....",
"...#....#.",
"######.#.#",
"",
"Tile 1619:",
"##.##...##",
"..##.....#",
"#....#....",
"#.#......#",
"#......#..",
".#.#.....#",
"#..#.....#",
"##...##..#",
"#.........",
"...#..##..",
"",
"Tile 2539:",
"#.#.#.##.#",
".......###",
"........#.",
"..#...#...",
"#.........",
"#.##....##",
".####.##.#",
".........#",
"##.##..#..",
"...##.##.#",
"",
"Tile 2837:",
".###.#.#.#",
"#.####...#",
"#......##.",
"#...#.#...",
"..###....#",
"..........",
".....#...#",
"#.....##..",
"#....##...",
"#....##...",
"",
"Tile 1181:",
"#.###....#",
".#...#....",
"....#..#..",
"....#.....",
"#.#.##..#.",
"##...###..",
"#....#...#",
".........#",
".##...#..#",
"..##.#..##",
"",
"Tile 2731:",
".#....##..",
"......#.#.",
"......#...",
".....#.#..",
"#.#..##.#.",
".....###..",
"#...##.#..",
"#...##..#.",
"#.##.#...#",
"..#....###",
"",
"Tile 2477:",
"####...#.#",
"...#......",
"........#.",
".......#.#",
"..........",
"#.#......#",
"##...##...",
".....#....",
"##.#.....#",
"#..#.##..#",
"",
"Tile 2851:",
".#....####",
"....###...",
"#.....#..#",
"#........#",
"..#.....#.",
".#.......#",
"#.........",
"...###...#",
"#.......##",
"##.##.####",
"",
"Tile 3779:",
"...###.##.",
"#.#..#..#.",
"##.#..#...",
"..#....#..",
".##..#...#",
".#.......#",
"..##..#...",
"..#......#",
"#........#",
"..##.....#",
"",
"Tile 1901:",
".##..#...#",
".........#",
"..........",
"#..#####.#",
"#....#...#",
"###...#...",
"...#..#..#",
".#..#..#..",
"....#.....",
".##.##....",
"",
"Tile 3463:",
"....######",
"..#....###",
"##....#..#",
"#....##.##",
"#..#......",
".........#",
"..........",
"#......#..",
"..........",
"##....##.#",
"",
"Tile 1409:",
".#.###..#.",
"#.#..#....",
".#.....#.#",
"#..#......",
"#.........",
"#..#......",
"...###....",
".....#....",
"...#......",
"##.###.###",
];

input2 = [
"Tile 2311:",
"..##.#..#.",
"##..#.....",
"#...##..#.",
"####.#...#",
"##.##.###.",
"##...#.###",
".#.#.#..##",
"..#....#..",
"###...#.#.",
"..###..###",
"",
"Tile 1951:",
"#.##...##.",
"#.####...#",
".....#..##",
"#...######",
".##.#....#",
".###.#####",
"###.##.##.",
".###....#.",
"..#.#..#.#",
"#...##.#..",
"",
"Tile 1171:",
"####...##.",
"#..##.#..#",
"##.#..#.#.",
".###.####.",
"..###.####",
".##....##.",
".#...####.",
"#.##.####.",
"####..#...",
".....##...",
"",
"Tile 1427:",
"###.##.#..",
".#..#.##..",
".#.##.#..#",
"#.#.#.##.#",
"....#...##",
"...##..##.",
"...#.#####",
".#.####.#.",
"..#..###.#",
"..##.#..#.",
"",
"Tile 1489:",
"##.#.#....",
"..##...#..",
".##..##...",
"..#...#...",
"#####...#.",
"#..#.#.#.#",
"...#.#.#..",
"##.#...##.",
"..##.##.##",
"###.##.#..",
"",
"Tile 2473:",
"#....####.",
"#..#.##...",
"#.##..#...",
"######.#.#",
".#...#.#.#",
".#########",
".###.#..#.",
"########.#",
"##...##.#.",
"..###.#.#.",
"",
"Tile 2971:",
"..#.#....#",
"#...###...",
"#.#.###...",
"##.##..#..",
".#####..##",
".#..####.#",
"#..#.#..#.",
"..####.###",
"..#.#.###.",
"...#.#.#.#",
"",
"Tile 2729:",
"...#.#.#.#",
"####.#....",
"..#.#.....",
"....#..#.#",
".##..##.#.",
".#.####...",
"####.#.#..",
"##.####...",
"##..#.##..",
"#.##...##.",
"",
"Tile 3079:",
"#.#.#####.",
".#..######",
"..#.......",
"######....",
"####.#..#.",
".#...#.##.",
"#.#####.##",
"..#.###...",
"..#.......",
"..#.###...",
];

const tiles = {};
let currTile = null;
for(let i = 0; i < input.length; i++) {
    const line = input[i];
    if(currTile == null) {
        let tileId = line.split(" ")[1];
        tileId = +tileId.substring(0, tileId.length - 1);
        
        tiles[tileId] = currTile = {tileId, data: []};
    } else if(line !== "") {
        currTile.data.push(line);
    } else {
        currTile = null;
    }
}

const tileWrapper = (tile) => {
    const width = tile.data.length;
    let data = {};
    for(let y = 0; y < width; y++) {
        for(let x = 0; x < width; x++) {
            data[`${x}${y}`] = tile.data[y][x];
        }
    }
    let rotation = 0;
    let hflip = vflip = false;
    
    const get = (x,y) => data[`${x}${y}`];
    
    const self = {
        get,
        set: (x, y, val) => data[`${x}${y}`] = val,
        getSide: (side) => {
            if(side == 0) {
                let result = "";
                for(let x = 0; x < width; x++) {
                    result += get(x, 0);
                }
                return result;
            } else if(side == 1) {
                let result = "";
                for(let y = 0; y < width; y++) {
                    result += get(width - 1, y);
                }
                return result;
            } else if(side == 2) {
                let result = "";
                for(let x = 0; x < width; x++) {
                    result += get(x, width - 1);
                }
                return result;
            } else if(side == 3) {
                let result = "";
                for(let y = 0; y < width; y++) {
                    result += get(0, y);
                }
                return result;
            }
        },
        rotateLeft: () => {
            const tmp = hflip;
            hflip = vflip;
            vflip = tmp;
            rotation = (rotation + 3) % 4
            let newData = JSON.parse(JSON.stringify(data));
            for(let x = 0; x < width; x++) {
                for(let y = 0; y < width; y++) {
                    newData[`${x}${y}`] = get(width - 1 - y, x);
                }
            }
            data = newData;
        },
        print: () => {
            for(let y = 0; y < width; y++) {
                let line = "";
                for(let x = 0; x < width; x++) {
                    line += get(x,y);
                }
                console.log("\t" + line)
            }
            console.log();
        },
        hflip: () => {
            hflip ^= true;
            let newData = JSON.parse(JSON.stringify(data));
            for(let x = 0; x < width; x++) {
                for(let y = 0; y < width; y++) {
                    newData[`${x}${y}`] = get(width - 1 - x, y);
                }
            }
            data = newData;
        },
        vflip: () => {
            vflip ^= true;
            let newData = JSON.parse(JSON.stringify(data));
            for(let x = 0; x < width; x++) {
                for(let y = 0; y < width; y++) {
                    newData[`${x}${y}`] = get(x, width - 1 - y);
                }
            }
            data = newData;
        },
        getUp: () => {
            return rotation;
        },
        getTileId: () => {
            return tile.tileId;
        },
        getLabel: () => {
            const tileId = tile.tileId;
            const dir = "▲►▼◄"[rotation];
            const flipped = self.isFlipped() ? "ꜝ" : " ";
            return "" + tileId + flipped + dir + ' '.repeat(6 - (""+tileId).length);
        },
        getDirectionForSide: (side) => {
            return self.isFlipped() ? (rotation - side + 4) % 4 : (rotation + side) % 4;
        },
        aligns: (side, otherTile) => {
            return self.getSide(side) === otherTile.getSide((side + 2) % 4);
        },
        isFlipped: () => {
            return (hflip === 1) || (vflip === 1);
        },
        getWidth: () => width
    };
    return self;
}

const width = Math.sqrt(Object.keys(tiles).length);
console.log(Object.keys(tiles).length, width);

// Construct sides
const reverse = (str) => [...str].reverse().join('');
Object.values(tiles).forEach(tile => {
    const top = tile.data[0];
    const bottom = tile.data[tile.data.length - 1]
    let left = right = "";
    for(let y = 0; y < tile.data.length; y++) {
        left += tile.data[y][0];
        right += tile.data[y][tile.data[y].length - 1];
    }
    
    tile.sides = [
        // Sides
        top,
        right,
        bottom,
        left,
    ];
});
//console.log(tiles);

// Match sides
const tileOptions = {};
Object.keys(tiles).forEach(tileId => {
    //console.log("Tile: ", tileId);
    const tile = tiles[tileId];
    const options = [];
    Object.keys(tiles).forEach(otherTileId => {
        if(otherTileId === tileId) {
            return;
        }
        //console.log("\t checking against: ", otherTileId);
        const otherTile = tiles[otherTileId];
        let matches = 0;
        
        const countMatches = (sides, otherSides, otherReversed) => {
            // Go over the sides of the tile
            for(var i = 0; i < 4; i++) {
                const side = sides[i];
                // Opposite side requires no tricker
                const opposite = (i + 2) % 4;
                
                // Rotate the opposite tile
                for(var j = 0; j < 4; j++) {
                    let otherSide = otherSides[j];
                    if(j !== opposite && j !== (opposite + 1) % 4) {
                        otherSide = reverse(otherSide);
                    }
                    if(otherReversed) {
                        otherSide = reverse(otherSide);
                    }
                    
                    if(side === otherSide) {
                        console.log(side, " matches ", otherSide, "on direction", ["top", "right", "bottom", "left"][j], ["", "reversed"][otherReversed ? 1 : 0]);
                        return {otherTileId, side: i, otherSide: j};
                    }
                }
            }
            return null;
        }
        
        const normalMatch = countMatches(tile.sides, otherTile.sides, false);
        const reverseMatch = countMatches(tile.sides, otherTile.sides, true);
        if(tileId === "2473" && otherTileId === "1171") {
            console.log(normalMatch, reverseMatch);
            console.log(tiles[tileId].sides[1]);
            console.log(tiles[otherTileId].sides[3]);
        }
        //console.log("\t\t n: ", normalMatch != null);
        //console.log("\t\t r: ", reverseMatch != null);
        if(normalMatch != null) {
            options.push(normalMatch);
        }
        if(reverseMatch != null) {
            options.push(reverseMatch);
        }
    });
    //console.log(options);
    tileOptions[tileId] = options;
});

Object.keys(tileOptions).forEach(tileId => {
    console.log(tileId, tileOptions[tileId].length);
});

console.log(Object.keys(tileOptions).filter(t => tileOptions[t].length === 2).map(x => +x).reduce((a,b) => a*b));

// Reconstruct
const tileArray = [...new Array(width)].map(x => [...new Array(width)].map(y => -1));
const printArray = (array) => {
    for(let y = 0; y < width; y++) {
        let line = "";
        for(let x = 0; x < width; x++) {
            if(array[x][y] !== -1) {
                line += array[x][y].getLabel();
            } else {
                line += " -1     "
            }
        }
        console.log(line);
    }
    console.log();
}

// Pick a corner
corner = Object.keys(tileOptions).find(t => {
    return tileOptions[t].length === 2
        && tileOptions[t].map(neighbour => neighbour.side).sort().filter((x,i) => x == [1, 2][i]).length === 2;
})
// FIXME:
//place(corner, 0, 0, false, false, 0);

/*
let testTile = tileWrapper(tiles["2311"]);
testTile.print();
testTile.rotateLeft();
testTile.rotateLeft();
testTile.rotateLeft();
testTile.rotateLeft();
testTile.vflip();
testTile.print();
console.log(testTile.getSide(0));
console.log(testTile.getSide(1));
console.log(testTile.getSide(2));
console.log(testTile.getSide(3));
console.log(testTile.getLabel());*/


tileArray[0][0] = tileWrapper(tiles[corner]);
const placeTile = (tile, x, y) => {
    if(x < 0 || x >= width || y < 0 || y >= width) {
        console.log(" !!! Out of array")
        return;
    }
    if(tileArray[x][y] !== -1) {
        if(tileArray[x][y].getTileId() !== tileId) {
            console.log("!!! Mismatch in tiles at ", x, "x", y, " expected ", tileArray[x][y].tileId, " but was ", tileId);
        }
        if(tileArray[x][y].getUp() !== up) {
            console.log("!!! Mismatch in tiles at ", x, "x", y, " expected up ", tileArray[x][y].up, " but was ", up);
        }
        /*
        if(tileArray[x][y].hflip != hflip) {
            console.log("!!! Mismatch in tiles at ", x, "x", y, " expected horizontal flipped ", tileArray[x][y].hflip, " but was ", hflip);
        }
        if(tileArray[x][y].vflip != vflip) {
            console.log("!!! Mismatch in tiles at ", x, "x", y, " expected vertical flipped ", tileArray[x][y].vflip, " but was ", vflip);
        }*/
        return;
    }
    tileArray[x][y] = tile;
};

const expand = (x, y) => {
    const tile = tileArray[x][y];
    const tileId = tile.getTileId();
    console.log("Expanding at", x, y, "for tile", tileId);
    for(let i = 0; i < tileOptions[tileId].length; i++) {
        const neighbour = tileOptions[tileId][i];
        
        const placeDirection = tile.getDirectionForSide(neighbour.side);
        //console.log(neighbour.otherTileId, neighbour.side, placeDirection, neighbour.otherSide);
        
        let anyOpen = false;
        for(let y = 0; y < width; y++) {
            for(let x = 0; x < width; x++) {
                if(tileArray[x][y] === -1) {
                    anyOpen = true;
                    break;
                }
            }
        }
        if(!anyOpen) {
            console.log("Done, exiting now");
            return;
        }
        
        if((placeDirection == 0 && tileArray[x][y -1] !== -1)
            || (placeDirection == 1 && tileArray[x + 1][y] !== -1)
            || (placeDirection == 2 && tileArray[x][y + 1] !== -1)
            || (placeDirection == 3 && tileArray[x - 1][y] !== -1)) {
            //console.log(x,y,"Already set");
            continue;
        }
        
        const neighbourTile = tileWrapper(tiles[neighbour.otherTileId]);
        while(!tile.aligns(placeDirection, neighbourTile)) {
            neighbourTile.rotateLeft();
            if(neighbourTile.getUp() == 0) {
                if(neighbourTile.isFlipped()) {
                    break;
                } else {
                    neighbourTile.hflip();
                }
            }
        }
        if(!tile.aligns(placeDirection, neighbourTile)) {
            console.log(" !!! Doesn't align");
        }
        
        switch(placeDirection) {
            case 0: // TOP
                tileArray[x][y - 1] = neighbourTile;
                printArray(tileArray);
                expand(x, y - 1);
                break;
            case 1: // RIGHT
                tileArray[x + 1][y] = neighbourTile;
                printArray(tileArray);
                expand(x + 1, y);
                break;
            case 2: // BOTTOM
                tileArray[x][y + 1] = neighbourTile;
                printArray(tileArray);
                expand(x, y + 1);
                break;
            case 3: // LEFT
                tileArray[x - 1][y] = neighbourTile;
                printArray(tileArray);
                expand(x - 1, y);
                break;
        }
    }
};
expand(0,0);
console.log("Done");

printArray(tileArray);

const printTotalArray = (array) => {
    const dim = array[0][0].getWidth();
    for(let y = 0; y < width * dim; y++) {
        const tileY = ~~(y/dim);
        const inY = y % dim;
        if(inY === 0) {
            console.log();
        }
        let line = "";
        for(let x = 0; x < width * dim; x++) {
            const tileX = ~~(x/dim);
            const inX = x % dim;
            if(inX === 0) {
                line += " ";
            }
            if(array[tileX][tileY] === -1) {
                line += " ";
            } else {
                line += array[tileX][tileY].get(inX, inY);
            }
        }
        console.log(line);
    }
    console.log();
}
printTotalArray(tileArray);


const getTotalArray = (array) => {
    const dim = array[0][0].getWidth();
    const newDim = dim - 2;
    const result = {};
    
    const set = (x,y,val) => result[`${x},${y}`] = val;
    
    let writeY = 0;
    for(let y = 0; y < width * dim; y++) {
        const tileY = ~~(y/dim);
        const inY = y % dim;
        if(inY === 0 || inY === dim - 1) {
            continue;
        }

        let writeX = 0;
        for(let x = 0; x < width * dim; x++) {
            const tileX = ~~(x/dim);
            const inX = x % dim;
            if(inX === 0 || inX === dim - 1) {
                continue
            }
            
            set(writeX, writeY, array[tileX][tileY].get(inX, inY));
            writeX++;
        }
        writeY++;
    }
    return {data: result, width: writeY};
}

const totalArray = getTotalArray(tileArray);

const printTotalArray2 = (array) => {
    for(let y = 0; y < array.width; y++) {
        let line = "";
        for(let x = 0; x < array.width; x++) {
            line += array.data[`${x},${y}`];
        }
        console.log(line);
    }
    console.log();
}
printTotalArray2(totalArray);

// Find dragon
const template = [
"                  # ",
"#    ##    ##    ###",
" #  #  #  #  #  #   "
];
const markTemplate = (tileArray, template) => {
    for(let y = 0; y < tileArray.width - template.length; y++) {
        for(let x = 0; x < tileArray.width - template[0].length; x++) {
            let valid = true;
            for(let tx = 0; tx < template[0].length; tx++) {
                for(let ty = 0; ty < template.length; ty++) {
                    if(template[ty][tx] === '#' && tileArray.data[`${x+tx},${y+ty}`] !== '#') {
                        valid = false;
                        break;
                    }
                }
            }
            if(valid) {
                console.log("Found at", x, y);
                for(let tx = 0; tx < template[0].length; tx++) {
                    for(let ty = 0; ty < template.length; ty++) {
                        if(template[ty][tx] === '#') {
                            tileArray.data[`${x+tx},${y+ty}`] = 'O';
                        }
                    }
                }
            }
        }
    }
}

// flipped
let newData = {};

newData = {};
for(let x = 0; x < totalArray.width; x++) {
    for(let y = 0; y < totalArray.width; y++) {
        newData[`${x},${y}`] = totalArray.data[`${totalArray.width - 1 - x},${y}`];
    }
}
totalArray.data = newData;

newData = {};
for(let x = 0; x < totalArray.width; x++) {
    for(let y = 0; y < totalArray.width; y++) {
        newData[`${x},${y}`] = totalArray.data[`${totalArray.width - 1 - y},${x}`];
    }
}
totalArray.data = newData;

newData = {};
for(let x = 0; x < totalArray.width; x++) {
    for(let y = 0; y < totalArray.width; y++) {
        newData[`${x},${y}`] = totalArray.data[`${totalArray.width - 1 - y},${x}`];
    }
}
totalArray.data = newData;




markTemplate(totalArray, template);
printTotalArray2(totalArray);

let noise = 0;
for(let x = 0; x < totalArray.width; x++) {
    for(let y = 0; y < totalArray.width; y++) {
        if(newData[`${x},${y}`] === '#') {
            noise++;
        }
    }
}

console.log("Done: ", noise);
